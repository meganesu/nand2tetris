// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:

    //  RAM16K(in= ,load= ,address= ,out= ); 
    //  Screen(in= ,load= ,address= ,out= );
    //  Keyboard(out= );

    // Only set RAM load bit if load is 1 AND address[14] is 0
    Not(in=address[14], out=notaddr14);
    And(a=load, b=notaddr14, out=ramload);
    RAM16K(in=in, load=ramload, address=address[0..13], out=ramout);

    // Only set Screen load bit if load is 1 AND address[14] is 1 AND address[13] is 0
    Not(in=address[13], out=notaddr13);
    And(a=address[14], b=notaddr13, out=addr14Notaddr13);
    And(a=addr14Notaddr13, b=load, out=screenload);
    Screen(in=in, load=screenload, address=address[0..12], out=screenout);

    Keyboard(out=keyboardout);


    // Choose which memory output to use
    
    //  Mux16(a= ,b= ,sel= ,out= ); 
    Mux16(a=ramout, b=screenout, sel=address[14], out=muxramscreen);
    And(a=address[14], b=address[13], out=addr13Andaddr14);
    Mux16(a=muxramscreen, b=keyboardout, sel=addr13Andaddr14, out=out);

}